{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReserved","NONE","sortType","setSortType","ReorderedGoods","goods","visibleGoods","sort","a1","a2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAhCD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAqBzB,OAnBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQP,GACN,KAAKP,EAASe,QACZ,OAAOF,EAAGG,cAAcF,GAG1B,KAAKd,EAASiB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAGxB,QACE,OAAO,MAITd,GACFO,EAAaQ,UAGRR,EAOgBS,CACrBnB,EACA,CAAEG,aAAYG,aAQhB,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SAAU,UACV,CACE,aAAchB,IAAaP,EAASe,WAGxCS,QAAS,kBAAMhB,EAAYR,EAASe,UARtC,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,SAAU,aACV,CACE,aAAchB,IAAaP,EAASiB,UAGxCO,QAAS,kBAAMhB,EAAYR,EAASiB,SARtC,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,SAAU,aACV,CACE,YAA4B,IAAfnB,IAGjBoB,QAAS,kBAAMnB,GAA6B,IAAfD,IAR/B,sBAaEA,GAAcG,IAAaP,EAASM,OAElC,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAnDnBnB,GAAc,QACdG,EAAYR,EAASM,OA+Cb,sBAUN,6BACE,6BACGG,EAAegB,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC7HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.510eae19.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a1, a2) => {\n    switch (sortType) {\n      case SortType.ALPABET: {\n        return a1.localeCompare(a2);\n      }\n\n      case SortType.LENGTH: {\n        return a1.length - a2.length;\n      }\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReserved] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const ReorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n\n  const resetBtn = () => {\n    setIsReserved(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-info',\n            {\n              'is-light': !(sortType === SortType.ALPABET),\n            },\n          )}\n          onClick={() => setSortType(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-success',\n            {\n              'is-light': !(sortType === SortType.LENGTH),\n            },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-warning',\n            {\n              'is-light': (isReversed === false),\n            },\n          )}\n          onClick={() => setIsReserved(isReversed !== true)}\n        >\n          Reverse\n\n        </button>\n        {(isReversed || sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => resetBtn()}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {ReorderedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}